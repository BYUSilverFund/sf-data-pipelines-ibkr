name: Smart Airflow Deploy

on:
  push:
    branches:
      - main
    paths-ignore:
      - "README.md"
      - "README"

env:
  INSTANCE_ID: "i-0f886fb3f9553d527"
  AWS_REGION: "us-west-2"

permissions:
  contents: read
  id-token: write

jobs:
  deploy-to-ec2:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # Configure AWS credentials
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::673541324313:role/Airflow-CI-CD
          role-session-name: GitHub_to_AWS_via_FederatedOIDC
          aws-region: ${{ env.AWS_REGION }}

      # Start the EC2 instance (if stopped)
      - name: Start EC2 instance
        run: |
          aws ec2 start-instances --instance-ids ${{ env.INSTANCE_ID }} --region ${{ env.AWS_REGION }}
          aws ec2 wait instance-running --instance-ids ${{ env.INSTANCE_ID }} --region ${{ env.AWS_REGION }}

      - name: Deploy via SSM
        run: |
          aws ssm send-command \
            --document-name "AWS-RunShellScript" \
            --targets "Key=InstanceIds,Values=${{ env.INSTANCE_ID }}" \
            --parameters 'commands=[
              "mkdir -p /home/ec2-user/airflow",
              "cd /home/ec2-user/airflow",
              "yum install -y git",
              "git init",
              "git config --global --add safe.directory /home/ec2-user/airflow",
              "git remote add origin https://github.com/BYUSilverFund/sf-data-pipelines-ibkr.git",
              "git remote set-url --push origin no_push",
              "git fetch origin",
              "git reset --hard",
              "yum install -y docker",
              "systemctl start docker",
              "systemctl enable docker",
              "docker-compose down",
              "docker-compose up --build -d",
              "docker-compose run certbot certonly --webroot -w /var/www/certbot -d airflow.silverfund.byu.edu --non-interactive --agree-tos --installer nginx",
              "if ! cmp -s /home/ec2-user/airflow/certbot-renew.service /etc/systemd/system/certbot-renew.service || \
                ! cmp -s /home/ec2-user/airflow/certbot-renew.timer /etc/systemd/system/certbot-renew.timer; 
              then \
                cp /home/ec2-user/airflow/certbot-renew.service /etc/systemd/system/certbot-renew.service; \
                cp /home/ec2-user/airflow/certbot-renew.timer /etc/systemd/system/certbot-renew.timer; \
                systemctl daemon-reload; systemctl enable --now certbot-renew.timer; \
                echo \"Systemd unit files updated and timer enabled.\"; \
              else \
                echo \"No changes to systemd unit files; skipping certbot timer reload.\"; \
              fi"
            ]'
