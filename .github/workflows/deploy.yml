name: Deploy Airflow to EC2

on:
  push:
    branches:
      - main
    paths:
      - "dags/**"
      - "config/**"
      - "docker-compose.yaml"
      - ".github/workflows/deploy.yml"

env:
  INSTANCE_NAME: "airflow"
  AWS_REGION: "us-west-2"

permissions:
  contents: read
  id-token: write

jobs:
  deploy-to-ec2:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v4

      # Step 2: Configure AWS credentials
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::673541324313:role/sf-data-pipeline-ibkr-CI-CD # Replace with your IAM role
          role-session-name: GitHub_to_AWS_via_FederatedOIDC
          aws-region: ${{ env.AWS_REGION }}

      # Step 3: Start the EC2 instance (if stopped)
      - name: Start EC2 instance
        run: |
          aws ec2 start-instances --instance-name ${{ env.EC2_NAME }} --region ${{ env.AWS_REGION }}
          aws ec2 wait instance-running --instance-name ${{ env.EC2_NAME }} --region ${{ env.AWS_REGION }}

      # Step 4: Copy DAGs, configs, and docker-compose.yaml to EC2
      - name: Copy files to EC2
        env:
          PRIVATE_KEY: ${{ secrets.EC2_SSH_KEY }} # Add your EC2 private key as a GitHub secret
          HOST: ${{ secrets.EC2_HOST }} # Add your EC2 public IP or hostname as a GitHub secret
          USER: ${{ secrets.EC2_USER }} # Add your EC2 SSH user as a GitHub secret
        run: |
          echo "$PRIVATE_KEY" > key.pem
          chmod 600 key.pem
          rsync -avz -e "ssh -i key.pem -o StrictHostKeyChecking=no" ./dags $USER@$HOST:~/airflow-project/dags
          rsync -avz -e "ssh -i key.pem -o StrictHostKeyChecking=no" ./config $USER@$HOST:~/airflow-project/config
          rsync -avz -e "ssh -i key.pem -o StrictHostKeyChecking=no" ./docker-compose.yaml $USER@$HOST:~/airflow-project/

      # Step 5: Restart Airflow on EC2
      - name: Restart Airflow
        env:
          PRIVATE_KEY: ${{ secrets.EC2_SSH_KEY }}
          HOST: ${{ secrets.EC2_HOST }}
          USER: ${{ secrets.EC2_USER }}
        run: |
          ssh -i key.pem -o StrictHostKeyChecking=no $USER@$HOST "
            cd ~/airflow-project
            docker compose down
            docker compose up --build -d
          "
